{% extends "base.jinja" %}

{% block introduction %}
{% with github_config=settings("library.GitHubSyncConfiguration", use_default_site=True) %}
<h1>GitHub Sync Overview{% if github_config.is_beta %} <span
        class="beta-badge border-white text-white ms-1">Beta</span>{% endif %}</h1>
{% endwith %}
{% endblock %}

{% block content %}
<div class="container">
    <ul class="nav nav-tabs justify-content-center" id="githubSyncTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview"
                type="button" role="tab" aria-controls="overview" aria-selected="true">Overview</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="how-it-works-tab" data-bs-toggle="tab" data-bs-target="#how-it-works"
                type="button" role="tab" aria-controls="how-it-works" aria-selected="false">How it works</button>
        </li>
        {% with github_config=settings("library.GitHubSyncConfiguration", use_default_site=True) %}
        {% if github_config and github_config.faq_entries.exists() %}
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="faq-tab" data-bs-toggle="tab" data-bs-target="#faq" type="button" role="tab"
                aria-controls="faq" aria-selected="false">FAQ</button>
        </li>
        {% endif %}
        {% endwith %}
    </ul>
    <div class="tab-content py-3" id="githubSyncTabsContent">
        <div class="tab-pane fade show active" id="overview" role="tabpanel" aria-labelledby="overview-tab">
            <div class="row justify-content-center">
                <div class="col-12">
                    <div class="mb-4">
                        <p>
                            The <b>CoMSES Model Library GitHub Sync</b> feature allows you to connect your model in the
                            library to a
                            GitHub repository, enabling either a one-way or bidirectional sync of model source code and
                            metadata
                            between
                            the two platforms.
                        </p>
                        <p>
                            Get started by pressing
                            <span class="btn btn-sm btn-outline-secondary py-0 disabled">
                                <i class="fas fa-cog"></i> Configure
                            </span>
                            for one of your models listed below or on the <strong>GitHub Sync</strong> tab on a model's
                            page. Once you have an active synced repository, it will be linked in the same tab and
                            visible to others.
                        </p>
                    </div>
                    {% if user.is_authenticated %}
                    <div id="github-sync-overview"></div>
                    {% else %}
                    <div class="alert alert-dark text-center" role="alert">
                        You must be <a href="{{ url('account_login') }}?next={{ request.path }}" class="alert-link">signed in</a> to manage GitHub Sync for your models.
                    </div>
                    {% endif %}
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="how-it-works" role="tabpanel" aria-labelledby="how-it-works-tab">
            <div class="row justify-content-center mb-5">
                <div class="col-12 col-md-10">
                    <p class="text-center">
                        The bidirectional sync between the CoMSES Model Library and GitHub consists of two distinct
                        processes:
                        <strong>pushing</strong> (CoMSES → GitHub) and <strong>importing</strong> (GitHub → CoMSES),
                        both of
                        which can be toggled on or off independently.
                    <ul>
                        <li>
                            Both processes will be enabled by default when generating a new repository from a model
                            submission.
                        </li>
                        <li>
                            Alternatively, you can link an existing repository with only importing enabled to import
                            new releases from GitHub, similarly to the <i>Zenodo</i> GitHub integration.
                        </li>
                    </ul>
                    </p>
                </div>
                <div class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <h3 class="mb-0"><i class="fas fa-code-branch"></i> Pushing</h3>
                            <span class="text-muted">(CoMSES → GitHub)</span>
                        </div>
                        <div class="card-body">
                            <h5>How It Works</h5>
                            <ul class="px-3">
                                <li class="d-flex mb-2">
                                    <i class="fas fa-code-branch pt-1" style="width: 1rem"></i>
                                    <div class="ps-3 flex-grow-1">
                                        Published model releases are transformed into commits, branches,
                                        and releases on GitHub, preserving your project's history and versioning
                                    </div>
                                </li>
                                <li class="d-flex mb-2">
                                    <i class="fas fa-user pt-1" style="width: 1rem"></i>
                                    <div class="ps-3 flex-grow-1">
                                        In order to maintain attribution, the original submitter is set as the commit
                                        author, and all other authors as co-authors
                                        <p class="text-muted small mb-0">
                                            {% if not user.is_authenticated %}
                                            We will use a connected Github account or your profile information to sign
                                            commits.
                                            You can
                                            connect
                                            your Github account by editing your profile if you want it to appear as the
                                            author
                                            of the
                                            commits.
                                            {% elif user.member_profile.github_username %}
                                            Since you have a connected Github account, we will use it to sign commits:
                                            <code>{{ user.member_profile.github_username }} &lt;{{ user.member_profile.github_username }}@users.noreply.github.com&gt;</code>
                                            {% else %}
                                            Since you do not have a github account connected we will use your profile
                                            information:
                                            <code>{{ user.member_profile.name }} &lt;{{ user.email }}&gt;</code>
                                            {% endif %}
                                        </p>
                                    </div>
                                </li>
                                <li class="d-flex mb-2">
                                    <i class="fas fa-tags pt-1" style="width: 1rem"></i>
                                    <div class="ps-3 flex-grow-1">
                                        Metadata is preserved by adding to the GitHub repo where possible and stored in
                                        versioned
                                        <a href="https://codemeta.github.io/"><code>codemeta.json</code></a>,
                                        <a
                                            href="https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/licensing-a-repository"><code>LICENSE</code></a>,
                                        and <a
                                            href="https://citation-file-format.github.io/"><code>CITATION.cff</code></a>
                                        files
                                    </div>
                                </li>
                                <li class="d-flex">
                                    <i class="fas fa-sync-alt pt-1" style="width: 1rem"></i>
                                    <div class="ps-3 flex-grow-1">
                                        Each time a new release is published on the Model Library, or metadata for an
                                        existing
                                        one is updated, the GitHub repository is
                                        updated automatically
                                    </div>
                                </li>
                            </ul>
                            <hr />
                            <h5>Considerations</h5>
                            <ul class="px-3">
                                <li class="d-flex mb-2">
                                    <i class="fas fa-exclamation-triangle pt-1" style="width: 1rem"></i>
                                    <div class="ps-3 flex-grow-1">
                                        Changes made to any generated branches on GitHub will cause that branch to
                                        longer be
                                        automatically updated by the Model Library
                                    </div>
                                </li>
                                <li class="d-flex">
                                    <i class="fas fa-exclamation-triangle pt-1" style="width: 1rem"></i>
                                    <div class="ps-3 flex-grow-1">
                                        Individual files cannot exceed 100MB
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <h3 class="mb-0"><i class="fas fa-archive"></i> Importing</h3>
                            <span class="text-muted">(GitHub → CoMSES)</span>
                        </div>
                        <div class="card-body">
                            <h5>How It Works</h5>
                            <ul class="px-3">
                                <li class="d-flex mb-2">
                                    <i class="fas fa-rocket pt-1" style="width: 1rem"></i>
                                    <div class="ps-3 flex-grow-1">
                                        Whenever you <a
                                            href="https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository">publish
                                            a new release</a> on a linked GitHub repository with
                                        importing enabled, the release is automatically imported as a new release of
                                        your model
                                        in the CoMSES Model Library
                                    </div>
                                </li>
                                <li class="d-flex mb-2">
                                    <i class="fas fa-lock pt-1" style="width: 1rem"></i>
                                    <div class="ps-3 flex-grow-1">
                                        Releases imported from GitHub are initially unpublished in the Model Library,
                                        allowing
                                        you to
                                        approve the extracted metadata, make any last-minute changes (by updating the
                                        corresponding GitHub release),
                                        and request peer review.
                                    </div>
                                </li>
                                <li class="d-flex mb-2">
                                    <i class="fas fa-file-archive pt-1" style="width: 1rem"></i>
                                    <div class="ps-3 flex-grow-1">
                                        The release assets for the GitHub release are imported to the model library, and
                                        are
                                        available for download like any other release
                                    </div>
                                </li>
                                <li class="d-flex">
                                    <i class="fas fa-tags pt-1" style="width: 1rem"></i>
                                    <div class="ps-3 flex-grow-1">
                                        In order to populate metadata for the release record in the Model Library,
                                        <code>codemeta.json</code> and/or
                                        <code>CITATION.cff</code> files placed in the root of the repository will be
                                        parsed
                                    </div>
                                </li>
                            </ul>
                            <hr />
                            <h5>Considerations</h5>
                            <ul class="px-3">
                                <li class="d-flex mb-2">
                                    <i class="fas fa-exclamation-triangle pt-1" style="width: 1rem"></i>
                                    <div class="ps-3 flex-grow-1">
                                        Metadata files describing the model software should be well-formed and kept up
                                        to date
                                        in the repository to ensure accurate information is imported
                                    </div>
                                </li>
                                <li class="d-flex mb-2">
                                    <i class="fas fa-exclamation-triangle pt-1" style="width: 1rem"></i>
                                    <div class="ps-3 flex-grow-1">
                                        Releases imported from GitHub do not enforce a certain directory structure,
                                        instead
                                        pulling in the
                                        release assets as-is, so you must ensure this contains all of your source code,
                                        documentation, and other necessary files
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="faq" role="tabpanel" aria-labelledby="faq-tab">
            {% with github_config=settings("library.GitHubSyncConfiguration", use_default_site=True) %}
            {% if github_config and github_config.faq_entries.exists() %}
            <div class="row justify-content-center">
                <div class="col-12" role="tablist" aria-multiselectable="true">
                    {% for faq_entry in github_config.faq_entries.all() %}
                    {% set entry_id = "entry_" ~ loop.index %}
                    {% set heading_id = "faqHeading_" ~ loop.index %}
                    <div class='card mb-2'>
                        <div class='card-header' role='tab' id='{{ heading_id }}'>
                            <h5 class='mb-0'>
                                <button class='btn btn-link text-start' data-bs-toggle='collapse'
                                    data-bs-target='#{{entry_id}}' aria-expanded='false' aria-controls='{{entry_id}}'>
                                    {{ faq_entry.question }}
                                </button>
                            </h5>
                        </div>
                        <div id='{{entry_id}}' class='collapse' aria-labelledby='{{ heading_id }}'>
                            <div class='card-body'>
                                {% autoescape off %}
                                {{ faq_entry.answer }}
                                {% endautoescape %}
                            </div>
                        </div>
                    </div>
                    {% endfor %}
                </div>
            </div>
            {% endif %}
            {% endwith %}
        </div>
    </div>
</div>
{% endblock %}

{% block js %}
{{ vite_asset("apps/github_sync_overview.ts") }}
{% endblock %}