# Generated by Django 2.0.4 on 2018-04-03 22:44

import core.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import home.models
import modelcluster.fields
import taggit.managers
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.search.index


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("taggit", "0002_auto_20150616_2121"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("library", "0001_initial"),
        ("wagtailimages", "0019_delete_filter"),
        ("wagtailcore", "0040_page_draft_title"),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Breadcrumb",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Relative / absolute path or full URL",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CategoryIndexItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Relative path, absolute path, or URL",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("caption", models.CharField(max_length=600)),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.Image",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CategoryIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.Page",
                    ),
                ),
                (
                    "template",
                    models.CharField(
                        default="home/category_index.jinja", max_length=128
                    ),
                ),
                (
                    "heading",
                    models.CharField(
                        help_text="Short name to be placed in introduction header.",
                        max_length=128,
                    ),
                ),
                (
                    "summary",
                    models.CharField(
                        help_text="Summary blurb for this category index page.",
                        max_length=1000,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(home.models.NavigationMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="ContactPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.Page",
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=512)),
            ],
            options={
                "abstract": False,
            },
            bases=(home.models.NavigationMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="FaqEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("abm", "Agent-based Modeling Questions"),
                            ("general", "General CoMSES Net Questions"),
                            ("model-library", "Computational Model Library Questions"),
                        ],
                        default="general",
                        max_length=32,
                    ),
                ),
                (
                    "question",
                    models.CharField(help_text="Short question", max_length=128),
                ),
                ("answer", models.TextField(help_text="Markdown formatted answer")),
                ("date_created", models.DateTimeField(auto_now=True)),
                ("last_modified", models.DateTimeField(auto_now_add=True)),
                (
                    "submitter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name="FaqEntryPlacement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "faq_entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="home.FaqEntry",
                    ),
                ),
            ],
            options={
                "verbose_name": "faq placement",
            },
        ),
        migrations.CreateModel(
            name="FaqPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.Page",
                    ),
                ),
                ("description", models.CharField(max_length=1000)),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", home.models.NavigationMixin),
        ),
        migrations.CreateModel(
            name="FeaturedContentItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "link_external",
                    models.URLField(blank=True, verbose_name="External link"),
                ),
                ("embed_url", models.URLField(blank=True, verbose_name="Embed URL")),
                ("caption", models.CharField(max_length=255)),
                ("summary", models.TextField(blank=True, max_length=600)),
                ("title", models.CharField(max_length=255)),
                (
                    "codebase_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="library.CodebaseImage",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.Image",
                    ),
                ),
                (
                    "link_codebase",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="library.Codebase",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Journal",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("url", models.URLField()),
                (
                    "issn",
                    models.CharField(
                        blank=True,
                        help_text="Linking ISSN-L for this Journal",
                        max_length=16,
                    ),
                ),
                ("description", models.CharField(max_length=1000)),
            ],
            options={
                "abstract": False,
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name="JournalIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.Page",
                    ),
                ),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(home.models.NavigationMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="JournalSnippetPlacement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "journal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="home.Journal",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="journal_placements",
                        to="home.JournalIndexPage",
                    ),
                ),
            ],
            options={
                "verbose_name": "journal placement",
                "verbose_name_plural": "journal placements",
            },
        ),
        migrations.CreateModel(
            name="JournalTag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_journals",
                        to="home.Journal",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="home_journaltag_items",
                        to="taggit.Tag",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LandingPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.Page",
                    ),
                ),
                ("mission_statement", models.CharField(max_length=512)),
                ("community_statement", models.TextField()),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="MarkdownPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.Page",
                    ),
                ),
                (
                    "template",
                    models.CharField(
                        default="home/markdown_page.jinja", max_length=128
                    ),
                ),
                ("heading", models.CharField(blank=True, max_length=128)),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Post date"
                    ),
                ),
                (
                    "description",
                    core.fields.MarkdownField(
                        blank=True, max_length=512, rendered_field=True
                    ),
                ),
                ("body", core.fields.MarkdownField(blank=True, rendered_field=True)),
                (
                    "description_markup_type",
                    models.CharField(
                        choices=[
                            ("", "--"),
                            ("markdown", "markdown"),
                            ("html", "html"),
                            ("plain", "plain"),
                            ("", ""),
                        ],
                        default="markdown",
                        max_length=30,
                    ),
                ),
                (
                    "body_markup_type",
                    models.CharField(
                        choices=[
                            ("", "--"),
                            ("markdown", "markdown"),
                            ("html", "html"),
                            ("plain", "plain"),
                            ("", ""),
                        ],
                        default="markdown",
                        max_length=30,
                    ),
                ),
                ("_description_rendered", models.TextField(editable=False)),
                (
                    "jumbotron",
                    models.BooleanField(
                        default=True,
                        help_text="True if this page should display its title and description in a jumbotron",
                    ),
                ),
                ("_body_rendered", models.TextField(editable=False)),
            ],
            options={
                "abstract": False,
            },
            bases=(home.models.NavigationMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="NewsIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.Page",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="NewsPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.Page",
                    ),
                ),
                ("body", wagtail.fields.RichTextField()),
                ("date", models.DateField(verbose_name="Post date")),
                (
                    "feed_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.Image",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="NewsPageRelatedLink",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=255)),
                ("url", models.URLField()),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_links",
                        to="home.NewsPage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PeopleEntryPlacement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "category",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "Directorate"),
                            (2, "Executive Board"),
                            (3, "CoMSES Digest Editors"),
                            (4, "Staff"),
                            (5, "Executive Board Alumni"),
                        ],
                        default=2,
                    ),
                ),
                (
                    "member_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="core.MemberProfile",
                    ),
                ),
            ],
            options={
                "verbose_name": "people entry placement",
            },
        ),
        migrations.CreateModel(
            name="PeoplePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.Page",
                    ),
                ),
                ("heading", models.CharField(max_length=64)),
                ("description", models.CharField(blank=True, max_length=1000)),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", home.models.NavigationMixin),
        ),
        migrations.CreateModel(
            name="PlatformIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.Page",
                    ),
                ),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(home.models.NavigationMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="PlatformSnippetPlacement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="platform_placements",
                        to="home.PlatformIndexPage",
                    ),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="core.Platform",
                    ),
                ),
            ],
            options={
                "verbose_name": "platform placement",
                "verbose_name_plural": "platform placements",
            },
        ),
        migrations.CreateModel(
            name="StreamPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.Page",
                    ),
                ),
                (
                    "template",
                    models.CharField(default="home/stream_page.jinja", max_length=128),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Post date"
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=512)),
                (
                    "body",
                    wagtail.fields.StreamField(
                        (
                            (
                                "heading",
                                wagtail.blocks.CharBlock(classname="full title"),
                            ),
                            ("paragraph", wagtail.blocks.RichTextBlock()),
                            ("image", wagtail.images.blocks.ImageChooserBlock()),
                            ("url", wagtail.blocks.URLBlock(required=False)),
                        )
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", home.models.NavigationMixin),
        ),
        migrations.CreateModel(
            name="SubNavigationLink",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "url",
                    models.CharField(
                        max_length=255,
                        verbose_name="Relative path, absolute path, or full URL",
                    ),
                ),
                ("title", models.CharField(max_length=128)),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="navigation_links",
                        to="wagtailcore.Page",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserMessage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.CharField(max_length=512)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("read_on", models.DateTimeField(blank=True, null=True)),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outbox",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inbox",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="peopleentryplacement",
            name="page",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="people_entry_placements",
                to="home.PeoplePage",
            ),
        ),
        migrations.AddField(
            model_name="journal",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="home.JournalTag",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="featuredcontentitem",
            name="link_page",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="wagtailcore.Page",
            ),
        ),
        migrations.AddField(
            model_name="featuredcontentitem",
            name="page",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="featured_content_queue",
                to="home.LandingPage",
            ),
        ),
        migrations.AddField(
            model_name="faqentryplacement",
            name="page",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="faq_entry_placements",
                to="home.FaqPage",
            ),
        ),
        migrations.AddField(
            model_name="categoryindexitem",
            name="page",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="callouts",
                to="home.CategoryIndexPage",
            ),
        ),
        migrations.AddField(
            model_name="breadcrumb",
            name="page",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="breadcrumbs",
                to="wagtailcore.Page",
            ),
        ),
    ]
